/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class uk_co_nickthecoder_jame_Surface */

#ifndef _Included_uk_co_nickthecoder_jame_Surface
#define _Included_uk_co_nickthecoder_jame_Surface
#ifdef __cplusplus
extern "C" {
#endif
#undef uk_co_nickthecoder_jame_Surface_SDL_SRCALPHA
#define uk_co_nickthecoder_jame_Surface_SDL_SRCALPHA 65536L
/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_load
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1load
  (JNIEnv *, jobject, jstring);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_create
 * Signature: (IIZZ)I
 */
JNIEXPORT jint JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1create
  (JNIEnv *, jobject, jint, jint, jboolean, jboolean);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_free
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1free
  (JNIEnv *, jobject, jlong);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_setAlpha
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1setAlpha
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_getPixelColor
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1getPixelColor
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_getPixelRGBA
 * Signature: (JLuk/co/nickthecoder/jame/RGBA;II)V
 */
JNIEXPORT void JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1getPixelRGBA
  (JNIEnv *, jobject, jlong, jobject, jint, jint);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_setPixel
 * Signature: (JIII)V
 */
JNIEXPORT void JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1setPixel__JIII
  (JNIEnv *, jobject, jlong, jint, jint, jint);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_setPixel
 * Signature: (JIIIIII)V
 */
JNIEXPORT void JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1setPixel__JIIIIII
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_fill
 * Signature: (JIIIII)I
 */
JNIEXPORT jint JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1fill
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_fill2
 * Signature: (JIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1fill2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_flip
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1flip
  (JNIEnv *, jobject, jlong);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_blit
 * Signature: (JJII)I
 */
JNIEXPORT jint JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1blit
  (JNIEnv *, jobject, jlong, jlong, jint, jint);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_blit2
 * Signature: (JIIIIJIIII)I
 */
JNIEXPORT jint JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1blit2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jlong, jint, jint, jint, jint);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_blit3
 * Signature: (JIIIIJIIIII)I
 */
JNIEXPORT jint JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1blit3
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_displayFormat
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1displayFormat
  (JNIEnv *, jobject, jlong);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_zoom
 * Signature: (Luk/co/nickthecoder/jame/Surface;JDDZ)I
 */
JNIEXPORT jint JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1zoom
  (JNIEnv *, jobject, jobject, jlong, jdouble, jdouble, jboolean);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_rotoZoom
 * Signature: (Luk/co/nickthecoder/jame/Surface;JDDZ)I
 */
JNIEXPORT jint JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1rotoZoom
  (JNIEnv *, jobject, jobject, jlong, jdouble, jdouble, jboolean);

/*
 * Class:     uk_co_nickthecoder_jame_Surface
 * Method:    surface_overlaps
 * Signature: (JJIII)Z
 */
JNIEXPORT jboolean JNICALL Java_uk_co_nickthecoder_jame_Surface_surface_1overlaps
  (JNIEnv *, jobject, jlong, jlong, jint, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class uk_co_nickthecoder_jame_Surface_BlendMode */

#ifndef _Included_uk_co_nickthecoder_jame_Surface_BlendMode
#define _Included_uk_co_nickthecoder_jame_Surface_BlendMode
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
